format elf

section '.text' executable

public ___print_string
___print_string:
    pusha                     ; Сохранить все регистры
    mov edx, 0xb8000          ; Установить адрес видеопамяти в edx
    mov ebx, 0                ; Начальный индекс в видеопамяти

    mov ecx, [esp + 36]       ; Получить адрес строки (аргумент 1)
    mov eax, [esp + 40]       ; Получить цвет (аргумент 2)
    shl eax, 8                ; Сдвинуть цвет влево на 8 бит, чтобы он стал старшим байтом AH
    mov ah, al                ; Переместить младший байт цвета в старший байт AH
    jmp print_loop

print_loop:
    lodsb                     ; Загрузить следующий символ из строки (по адресу в DS:ESI) в AL
    or al, al                 ; Проверить конец строки (нулевой символ)
    jz end_print              ; Если конец строки, перейти к завершению
    mov [edx + ebx], ax       ; Записать символ и атрибуты (цвет) в видеопамять
    add ebx, 2                ; Увеличить индекс на 2 (следующий символ)
    jmp print_loop            ; Перейти к следующему символу

end_print:
    popa                      ; Восстановить все регистры
    ret

use32
